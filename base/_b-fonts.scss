// **
// @TEXTFONT
// ------------------------

/*Font*/
$font:'Roboto', sans-serif;

/// Given a font size in pixels, reproduces that font size in rems.
/// @access public
/// @param {Length} $size - Font size
/// @example scss - Usage
///   .foo {
///     @include font-size(16px);
///   }
/// @example css - Result
///   .foo {
///     font-size: 16px;
///     font-size: 1rem;
///   }

$base-font-size: 16px !default;

@mixin font-size($size) {
    @if unitless($size) {
        $size: $size * 1px;
    }

    font-size: $size;
    font-size: ($size / $base-font-size) * 1rem;
}

// **
// @NUCLEO
// ------------------------

@font-face {
  font-family: 'Nucleo Glyph';
  src: url('../fonts/glyph/nucleo-glyph.eot');
  src: url('../fonts/glyph/nucleo-glyph.eot') format('embedded-opentype'),
    url('../fonts/glyph/nucleo-glyph.woff2') format('woff2'),
    url('../fonts/glyph/nucleo-glyph.woff') format('woff'),
    url('../fonts/glyph/nucleo-glyph.ttf') format('truetype'),
    url('../fonts/glyph/nucleo-glyph.svg') format('svg');
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'Nucleo Outline';
  src: url('../fonts/outline/nucleo-outline.eot');
  src: url('../fonts/outline/nucleo-outline.eot') format('embedded-opentype'),
    url('../fonts/outline/nucleo-outline.woff2') format('woff2'),
    url('../fonts/outline/nucleo-outline.woff') format('woff'),
    url('../fonts/outline/nucleo-outline.ttf') format('truetype'),
    url('../fonts/outline/nucleo-outline.svg') format('svg');
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'Nucleo Mini';
  src: url('../fonts/mini/nucleo-mini.eot');
  src: url('../fonts/mini/nucleo-mini.eot') format('embedded-opentype'),
	  url('../fonts/mini/nucleo-mini.woff2') format('woff2'),
	  url('../fonts/mini/nucleo-mini.woff') format('woff'),
	  url('../fonts/mini/nucleo-mini.ttf') format('truetype'),
	  url('../fonts/mini/nucleo-mini.svg') format('svg');
  font-weight: normal;
  font-style: normal;
}
